version: '3.3'

services:
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/raspberrypi3-homeassistant:stable"
    volumes:
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    privileged: true
    network_mode: host
    environment:
      - TZ=Europe/Madrid

  hass-configurator:
    container_name: hassConfig
    image: "causticlab/hass-configurator-docker:arm"
    restart: always
    ports:
      - "3218:3218/tcp"
    volumes:
      - ./homeassistant:/config
      - ./homeassistant/configurator:/hass-config

  octoprint:
      container_name: octoprint
      image: octoprint/octoprint
      privileged: true
      restart: always
      ports:
        - 4000:5000
      devices:
        - /dev/ttyAMA0:/dev/ttyAMA0
      volumes:
      - ./octoprint:/octoprint
      - /boot/config.txt:/boot/config.txt
      - /boot/cmdline.txt:/boot/cmdline.txt

  esphome:
    container_name: esphome
    image: esphome/esphome
    privileged: true
    environment:
      - TZ=Europe/Madrid
    volumes:
      - ./homeassistant/esphome:/config:rw
      - /etc/localtime:/etc/localtime:ro
    network_mode: host
    restart: always

  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto
    restart: always
    ports:
      - 1883:1883
      - 7001:7001
    expose:
      - 1883
      - 7001
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - '0.0.0.0:53:53/tcp'
      - '0.0.0.0:53:53/udp'
      - '0.0.0.0:67:67/udp'
      - '0.0.0.0:8089:80/tcp'
    volumes:
      - ./etc-pihole/:/etc/pihole/
      - ./etc-dnsmasqd/:/etc/dnsmasq.d/
      # run `touch ./pihole.log` first unless you like errors
      - ./pihole.log:/var/log/pihole.log
    environment:
      TZ: 'Europe/Madrid'
    restart: unless-stopped

  portainer:
    container_name: Portainer
    image: portainer/portainer:latest   
    command: -H unix:///var/run/docker.sock    
    restart: always
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /media/data/docker/portainer:/data
      - /etc/localtime:/etc/localtime:ro